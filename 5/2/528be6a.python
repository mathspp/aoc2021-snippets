FOLD_LINE_PREFIX = "fold along "

def fold_point(point, coord, value):
    x, y = point
    vx = value if coord == "x" else float("+inf")
    vy = value if coord == "y" else float("+inf")
    return (x if x < vx else 2 * vx - x, y if y < vy else 2 * vy - y)

with open(INPUT_FILE, "r") as f:
    data = f.read()

# Split point data from fold data.
point_data, fold_data = data.split("\n\n")
points = [tuple(map(int, point.split(","))) for point in point_data.splitlines()]
# Parse all folds now:
folds = [
    fold.removeprefix(FOLD_LINE_PREFIX).split("=")
    for fold in fold_data.splitlines()
]

folded = set(points)
for coord, value in folds:
    int_value = int(value)
    folded = {fold_point(point, coord, int_value) for point in folded}

# Create a "canvas" to paint the final result on.
width = 1 + max(x for x, _ in folded)
height = 1 + max(y for _, y in folded)
canvas = [[" "] * width for _ in range(height)]
for x, y in folded:
    # Character u2588 is a nice full box, see
    # https://en.wikipedia.org/wiki/Box-drawing_character#Block_Elements
    canvas[y][x] = "\u2588"
for row in canvas:
    print("".join(row))
